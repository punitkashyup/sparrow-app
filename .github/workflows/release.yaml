name: Release

on:
  push:
    branches:
      - main

env: 
  VITE_API_URL: ${{secrets.VITE_API_URL}}
  VITE_MIX_PANEL_TOKEN: ${{secrets.VITE_MIX_PANEL_TOKEN}}
  VITE_ENABLE_MIX_PANEL: ${{secrets.VITE_ENABLE_MIX_PANEL}}
  VITE_API_TIMEOUT: ${{secrets.VITE_API_TIMEOUT}}

jobs:
  build_and_release_macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Rust setup
      #   uses: dtolnay/rust-toolchain@stable

      # - name: Sync node version and setup cache
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '20.8'

      # - name: Build Tauri App
      #   run: |
      #     TAURI_PRIVATE_KEY="${{ secrets.TAURI_PRIVATE_KEY }}"
      #     TAURI_KEY_PASSWORD="${{ secrets.TAURI_KEY_PASSWORD }}" 
      #     APPLE_SIGNING_IDENTITY="${{ secrets.APPLE_SIGNING_IDENTITY }}"
      #     APPLE_CERTIFICATE="${{ secrets.APPLE_CERTIFICATE }}"
      #     APPLE_CERTIFICATE_PASSWORD="${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" 
      #     yarn install
      #     yarn tauri build --debug
      #   env:
      #     TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      #     TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      #     GITHUB_TOKEN: ${{ secrets.PR_GITHUB_TOKEN }}

      # - name: dmg sig
      #   run: cat /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/macos/sparrow-app.app.tar.gz.sig
      
      - name: dmg sig
        run: cat /Users/runner/work/sparrow-app/sparrow-app/src-tauri/hello.txt
      
      - name: Set up Environment Variable
        id: set-var
        run: |
          echo "##vso[task.setvariable variable=DMG_SIGNATURE]$(cat /Users/runner/work/sparrow-app/sparrow-app/src-tauri/hello.txt)"
  
      - name: Display DMG Signature
        run: echo "DMG Signature is ${{ steps.set-var.outputs.DMG_SIGNATURE }}"
      
      - uses: azure/setup-kubectl@v2.0

      - uses: Azure/k8s-set-context@v2b 
        with:
             kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
      - name: Kubernetes Secret Updater
        uses: punitkashyup/k8s-update-secrets@v1.0.0
        with:
          namespace: "sparrow-prod"
          secret_name: "sparrow-api-secret"
          key: "REDIS_HOST"
          new_value: ${{ env.DMG_SIGNATURE }}
            
          
      # - name: Upload mac-build to Azure Blob Storage
      #   run: |
      #     az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --container-name ${{ secrets.AZURE_CONTAINER_NAME }} --file /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/dmg/sparrow-app_1.0.0_x64.dmg --name sparrow-app_1.0.0_x64.dmg
      #     az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --container-name ${{ secrets.AZURE_CONTAINER_NAME }} --file /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/macos/sparrow-app.app.tar.gz --name sparrow-app.app.tar.gz
      #   env:
      #     AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      #     AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
      #     AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}


  build_and_release_windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '20.8'

  #     - name: Install Windows SDK
  #       run: Invoke-WebRequest -Uri https://aka.ms/winsdk/10/latest/SdkSetup.exe -OutFile $env:TEMP\SdkSetup.exe
  #       shell: powershell

  #     - name: Set up .NET Core
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: 3.1

  #     - name: Build Tauri App
  #       run: |
  #         $TAURI_PRIVATE_KEY="${{ secrets.TAURI_PRIVATE_KEY }}"
  #         $TAURI_KEY_PASSWORD="${{ secrets.TAURI_KEY_PASSWORD }}" 
  #         yarn cache clean
  #         npm install -g pnpm
  #         yarn install
  #         yarn tauri build --debug
  #       env:
  #         TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  #         TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  #         GITHUB_TOKEN: ${{ secrets.PR_GITHUB_TOKEN }}

  #     - name: msi sig
  #       run: Get-Content D:\a\sparrow-app\sparrow-app\src-tauri\target\debug\bundle\msi\sparrow-app_1.0.0_x64_en-US.msi.zip.sig
  
  #     - name: nsis sig
  #       run: Get-Content D:\a\sparrow-app\sparrow-app\src-tauri\target\debug\bundle\nsis\sparrow-app_1.0.0_x64-setup.nsis.zip.sig
      - name: Set up Environment Variable
        id: set-var
        run: |
          $DMG_SIGNATURE = Get-Content "C:\path\to\sparrow-app\sparrow-app\hello.txt"
          Write-Host "DMG Signature is $DMG_SIGNATURE"
          Write-Host "##vso[task.setvariable variable=DMG_SIGNATURE]$DMG_SIGNATURE"

      - uses: azure/setup-kubectl@v2.0

      - uses: Azure/k8s-set-context@v2
        with:
            kubeconfig: ${{ secrets.KUBE_CONFIG }}
        
      - name: Kubernetes Secret Updater
        uses: punitkashyup/k8s-update-secrets@v1.0.0
        with:
          namespace: "sparrow-prod"
          secret_name: "sparrow-api-secret"
          key: "REDIS_HOST"
          new_value: ${{ env.DMG_SIGNATURE }}


  #     - name: Download dmg file from Azure Blob Storage
  #       run: |
  #          az storage blob download --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --container-name ${{ secrets.AZURE_CONTAINER_NAME }} --name sparrow-app_1.0.0_x64.dmg --file D:\a\sparrow-app\sparrow-app\src-tauri\target\debug\bundle\msi\sparrow-app_1.0.0_x64.dmg
  #          az storage blob download --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --container-name ${{ secrets.AZURE_CONTAINER_NAME }} --name sparrow-app.app.tar.gz --file D:\a\sparrow-app\sparrow-app\src-tauri\target\debug\bundle\msi\sparrow-app.app.tar.gz
  #       env:
  #         AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
  #         AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
  #         AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}


          
  #     - name: Fetch Version from package.json
  #       id: fetch-version
  #       run: echo "::set-output name=version::$(jq -r .version package.json)"

  #     - name: Semantic Release
  #       run: npx semantic-release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PR_GITHUB_TOKEN }}
          
          
